name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - add-Dockerfile-repo
      - hook-angular-to-backend
    # paths:
    #   - 'config/**'
    #   - 'site/**'
    #   - 'Dockerfile'
    #   - '.github/workflows/**'

jobs:
  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update SHA
        run: echo $GITHUB_SHA > $GITHUB_WORKSPACE/helm/notes

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2  # Keeping v2 as it's the latest version
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: kasparov112000/learnbytesting-webapp-docker:latest
          build-args: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Configure kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 3b23a2dd-3391-4d1a-a478-e2a5564de99c

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Prep helm chart
        run: |
          mv ./helm/Chart.yaml ./helm/Chart.old.yaml &&
          cat ./helm/Chart.old.yaml | grep -v appVersion > ./helm/Chart.yaml &&
          echo -e "\r\nappVersion: v${GITHUB_REF##*/}\r\n" >> ./helm/Chart.yaml &&
          cat ./helm/Chart.yaml

      - name: Deploy to Kubernetes
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm upgrade webapp ./helm/ --install --wait --atomic --set=app.name=webapp --values=./helm/values.yaml
          kubeconfig: '${{ secrets.KUBECONFIG }}'

      - name: Install Dependencies
        run: npm ci

      - name: Cypress Tests
        uses: cypress-io/github-action@v6.5.0
        with:
          start: npm run test:dev
          wait-on: 'http://localhost:4200'
          wait-on-timeout: 120

      - name: Upload Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore

      - name: Upload Videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore
