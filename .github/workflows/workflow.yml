on:
  push:
    branches:
      - main
      - add-Dockerfile-repo
    # paths:
    #   - 'config/**'
    #   - 'site/**'
    #   - 'Dockerfile'
    #   - '.github/workflows/**'

jobs:
  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master

      - name: Update SHA
        run: echo $GITHUB_SHA > $GITHUB_WORKSPACE/helm/notes

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push.
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: kasparov112000/learnbytesting-webapp-docker:latest
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.MYTOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 3b23a2dd-3391-4d1a-a478-e2a5564de99c

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 3b23a2dd-3391-4d1a-a478-e2a5564de99c

      - name: Prep helm chart
        run: |
          mv ./helm/Chart.yaml ./helm/Chart.old.yaml &&
          cat ./helm/Chart.old.yaml | grep -v appVersion > ./helm/Chart.yaml &&
          echo -e "\r\nappVersion: v${GITHUB_REF##*/}\r\n" >> ./helm/Chart.yaml &&
          cat ./helm/Chart.yaml
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm upgrade webapp ./helm/ --install --wait --atomic --set=app.name=webapp --values=./helm/values.yaml
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - name: Cypress.io
        uses: cypress-io/github-action@v6.5.0
        with:
          start: npm run test:dev
      # after the test run completes store videos and any screenshots
      - uses: actions/upload-artifact@v4
        # add the line below to store screenshots only on failures
        # if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`
      - uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`
